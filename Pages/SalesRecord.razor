@page "/sales"

@inject NavigationManager NavManager

@using BisleriumCafe.Data
@using BisleriumCafe.Data.Services
@using BisleriumCafe.Data.Models
@inject ISnackbar Snackbar



<MudContainer Class="mt-8">
    <MudTable FixedHeader="true" FixedFooter="true" Height="450px" Items="@FilteredSales" Hover="true" Striped="false" >
        <ToolBarContent>
            <MudText Typo="Typo.h6">Sales</MudText>
            <MudSpacer />
            <MudSpacer />
            <MudTextField T="string" Class="mt-0" Label="Filter By Date" InputType="InputType.Date" Clearable="true" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.FilterAlt" ValueChanged="(x) => FilterByDate(x)" />
            <MudSpacer />
            <MudTextField T="string" Class="mt-0" Label="Filter By Month" InputType="InputType.Month" Clearable="true" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.FilterAlt" ValueChanged="(x) => FilterByMonth(x)" />
            <MudSpacer />           
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Sales Id</MudTh>
            <MudTh>Member Phone Number</MudTh>
            <MudTh>Order Date</MudTh>
            <MudTh>Order Items</MudTh>
            <MudTh>Order Total</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.SalesId</MudTd>
            <MudTd>@context.Number</MudTd>
            <MudTd>@context.OrderDate.ToString("MMMM dd, yyyy HH:mm:ss")</MudTd>
            <MudTd>
                @foreach (var orderItem in context.OrderItems)
                {
                    <div>
                    Product Name: @orderItem.ItemName | Quantity: @orderItem.Quantity
                    </div>
                }
            </MudTd>
            <MudTd>@context.OrderTotal</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
</MudContainer>


    @code {
    [CascadingParameter]
    private GlobalState _globalState { get; set; }
    private IEnumerable<Sales> AllSales = new List<Sales>();
    private IEnumerable<Sales> PDFData = new List<Sales>();

    private IEnumerable<Sales> FilteredSales = new List<Sales>();
    private DateTime? searchDate;
    private DateTime? searchMonth;

    private Sales selectedItem = null;



    protected override async Task OnInitializedAsync()
    {
        if (_globalState.CurrentUser == null)
        {
            NavManager.NavigateTo("/login");
        }

        AllSales = SalesService.GetAll();
        FilteredSales = AllSales.ToList();

    }
    private void FilterByDate(string x)
    {
        if (string.IsNullOrEmpty(x))
        {
            FilteredSales = AllSales;
            return;
        }
        string[] date = x.Split('-');
        FilteredSales = AllSales.Where(x => x.OrderDate.Year == int.Parse(date[0]) && x.OrderDate.Month == int.Parse(date[1]) && x.OrderDate.Day == int.Parse(date[2])).ToList();
    }

    private void FilterByMonth(string x)
    {
        if (string.IsNullOrEmpty(x))
        {
            FilteredSales = AllSales;
            return;
        }
        string[] yearMonth = x.Split('-');
        FilteredSales = AllSales.Where(x => x.OrderDate.Year == int.Parse(yearMonth[0]) && x.OrderDate.Month == int.Parse(yearMonth[1])).ToList();
    }
    
}